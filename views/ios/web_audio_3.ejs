<% layout('layout') %>

<h1><%= title %></h1>

<p>
  Refer: <a href="https://qiita.com/cocottejs/items/e75f751c7aa8a7361aab"></a>https://qiita.com/cocottejs/items/e75f751c7aa8a7361aab
  <br>
  ブロックされてしまう例
</p>

<a id="Play" class="btn btn-success" href="javascript:void(0);" onclick="clickPlay();">読み込み</a>
<a id="Pause" class="btn btn-info" href="javascript:void(0);">停止</a>
<div>iOS Mobile Safariではブロックされてしまう例です。正しく動作しません。</div>


<script type="text/javascript">

  //iOS版
  var request, context, source;

  function clickPlay() {
    status = 1;
    request = new XMLHttpRequest();
    request.open("GET", "/sounds/amachamusic_emerald.mp3", true);
    request.responseType = "arraybuffer";
    request.onload = completeOnLoad;
    request.send();
  }

  function completeOnLoad() {
    var elem = document.getElementById("Play");
    elem.innerText = "再生中";

    window.AudioContext = window.AudioContext || window.webkitAudioContext;
    context = new AudioContext();
    context.createBufferSource();

    source = context.createBufferSource();
    // オーディオをデコード
    context.decodeAudioData(request.response, function (buf) {
      source.buffer = buf;
      source.loop = false;
      source.connect(context.destination);
      source.start(0);
    });

  }

  /*
  //下記でも動作しない
  function completeOnLoad() {
    var elem = document.getElementById("Play");
    elem.innerText = "再生中";

    window.AudioContext = window.AudioContext || window.webkitAudioContext;
    context = new AudioContext();
    context.createBufferSource();

    // オーディオをデコード
    context.decodeAudioData(request.response, function (buf) {
      source.buffer = buf;
      source.loop = false;
    });

    source = context.createBufferSource();

    source.connect(context.destination);
    source.start(0);
  }
  */

  var elem = document.getElementById("Pause");
  elem.addEventListener("click", playStop, false);

  function playStop() {
    source.stop();
  }

</script>

